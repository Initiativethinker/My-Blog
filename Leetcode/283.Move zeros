## 题目链接

https://leetcode-cn.com/problems/move-zeroes/

## 题目描述

```
给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。

示例:

输入: [0,1,0,3,12]
输出: [1,3,12,0,0]
说明:

必须在原数组上操作，不能拷贝额外的数组。
尽量减少操作次数。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/move-zeroes
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
```

## 解题思路

注：不要被移动一词所迷惑去排序，应关注于题目的最终目的，先理解题目，再解题

将所有的0移动到末尾可以理解为，所有非零元素从0开始排，排完后，其余项再归0

#####Approach 1 

1.记录所有非零项并赋予新的下标 

2.遍历所有项后，在将其余项归0

代码-C++

```C++
using namespace std ;
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int j =0, i = 0;
        for (i = 0;i<nums.size();i++ ) {
            if (nums[i] !=0) {
                nums[j]=nums[i];
                j++;
            }
            
        }
        for (i=j;i<nums.size();i++) {
            nums[i]=0;
        }
    }
};
```

#####Approach 2

使用了两个循环，简单粗暴，尝试只用一组循环完成

只需要让非零元素的下标的元素改为0，但是若i，j相等时，所有元素都为0 ，因此当i !=j 时候，可以让其改为0 ，代码如下

```C++
using namespace std ;
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int j =0, i = 0;
        for (i = 0;i<nums.size();i++ ) {
            if (nums[i] !=0) {
                nums[j]=nums[i];
                if (i != j) {
                 nums[i]=0;
                }
                j++;//注意j的位置，先判断所有的元素是否都是非零，最后在递增
            }
        }
    }
};
```

